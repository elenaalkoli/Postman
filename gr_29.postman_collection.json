{
	"info": {
		"_postman_id": "b41417d5-1d46-41cb-8959-f4b407847f75",
		"name": "gr_29",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "the_first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let item_1 = 'Alex'\r",
							"\r",
							"pm.test(\"Test_1 Test\", function () {\r",
							"    pm.expect(item_1).to.equal('Alex')\r",
							"});\r",
							"\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"let person = {\r",
							"    \"age\": \"20\",\r",
							"    \"family\": {\r",
							"        \"children\": [\r",
							"            [\r",
							"                \"Alex\",\r",
							"                24\r",
							"            ],\r",
							"            [\r",
							"                \"Kate\",\r",
							"                12\r",
							"            ]\r",
							"        ],\r",
							"        \"u_salary_1_5_year\": 6000\r",
							"    },\r",
							"    \"name\": \"Alex\",\r",
							"    \"salary\": 1500\r",
							"}\r",
							"\r",
							"// Проверка элементов двухмерного массива (массив состоящий еще из массивов)\r",
							"pm.test(\"Test_2 Person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(20)\r",
							"});\r",
							"\r",
							"pm.test(\"Test_3 Person\", function () {\r",
							"    pm.expect(person.family.children[0][1]).to.deep.equal(24)\r",
							"});\r",
							"\r",
							"\r",
							"// Проверка ключа/параметра \r",
							"pm.test(\"Test_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"// Проверка объекта с объектом - целого элемента (в {} целый объект)\r",
							"pm.test(\"Test_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1500})\r",
							"});\r",
							"\r",
							"\r",
							"// Проверка каких-то данных в массиве person.family.children (в [] нужно указать номер элемента массива - 0,1 и т.д.)\r",
							"pm.test(\"Test_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(12)\r",
							"});\r",
							"\r",
							"// Проверка на тип данных (в () указываем искомый тип данных - Array, Number, String)\r",
							"pm.test(\"Test_7 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.be.a(\"Array\")\r",
							"});\r",
							"// Проверка на тип данных (в () указываем искомый тип данных - Array, Number, String). К примеру, \r",
							"// \"name\": \"Vadim\"  чтобы проверить в параметре name значение является строкой \r",
							"pm.test(\"Test_7.1 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"\r",
							"// Проверка на тип данных и на содержащееся в нем значение 12\r",
							"pm.test(\"Test_8 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.be.an(\"Array\").that.include(12)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "default"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "1",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "first",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "first Copy",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/get_method?name=Vadim&age=32",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Vadim"
						},
						{
							"key": "age",
							"value": "32"
						},
						{
							"key": "salary",
							"value": "2000",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "post_1",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "32",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "default"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "salary",
							"value": "2000",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5007_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5007/",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}